@model Ats.Models.Product.ProductViewModel;
@using Lpnet.WebApp.Resources
@{ 
  ViewBag.Title = @Resource.ViewBag_Title_Product_Edit;
    Layout = "~/Views/Shared/_Layout.cshtml"; }



@section styles{


    <link href="~/assets/css/UploadFile.css" rel="stylesheet" type="text/css" />


}
@{
    SelectList productCategories = ViewBag.ProductCategories;
    SelectList brandCategories = ViewBag.BrandCategories;
    SelectList unitCategories = ViewBag.UnitCategories;
}

<div class="page-content">
    <div class="container-fluid">
        @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { @class = "form-horizontal form-wizard-wrapper", enctype = "multipart/form-data", role = "form" }))
        {<!-- start page title -->

            <div class="row align-items-center">
                <div class="col-sm-6">
                    <div class="page-title-box">
                        <h4 class="font-size-18">@Resource.Common_label_edit</h4>
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Panda Loyalty</a></li>
                            <li class="breadcrumb-item active"><a href="@Url.Action("Index", "Product")">@Resource.Sidebar_configurations_product</a></li>
                            <li class="breadcrumb-item active">@Model.Code</li>

                        </ol>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-body">
                            <p class="badge badge-pill badge-success font-italic font-size-12">@ViewBag.StatusMessage</p>

                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Id)
                            <div class="row">
                                <div class="col-12 mt-1 ">
                                    <div class="form-group  row ">
                                        <label for="txtcode" class="col-lg-1 mt-1  text-left"><a class="text-danger">*</a>@Resource.Common_label_productcode:</label>
                                        <div class="col-lg-9">
                                            @Html.TextBoxFor(m => m.Code, new { @class = "form-control", id = "codeProduct", name = "txt_code_Prodcut", required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-12 mt-1 ">
                                    <div class="form-group  row ">
                                        <label for="txtcode" class="col-lg-1 mt-1  text-left"><a class="text-danger">*</a>@Resource.Common_label_productname:</label>
                                        <div class="col-lg-9">
                                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", id = "NameProduct", name = "txt_name_Prodcut", required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-lg-1 mt-1">
                                </div>
                                <div class="col-sm-3">
                                    <label ><a class="text-danger">* </a>@Resource.Common_label_productCategoryId</label>
                                    @Html.DropDownListFor(m => m.ProductCategoryId, productCategories, new { @class = "form-control", id = "creation-name", required = "required" })
                                </div>
                                @* <div class="col-sm-3">
                                    <label ><a class="text-danger">* </a>@Resource.Common_label_brandId</label>
                                    @Html.DropDownListFor(m => m.BrandId, brandCategories, new { @class = "form-control", required = "required" })
                                </div> *@
                                <div class="col-sm-3">
                                    <label ><a class="text-danger">* </a>@Resource.Common_label_unitId</label>
                                    @Html.DropDownListFor(m => m.UnitId, unitCategories, new { @class = "form-control", required = "required" })
                                </div>
                            </div>
                            <div class="row mb-4">
                                <div class="col-lg-1 mt-1">
                                </div>
                                <label for="lbRetailPrice" class="col-sm-1 mt-1 text-right">@Resource.Common_label_RetailPrice:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.RetailPrice, new { @class = "form-control", Type = "number" })
                                </div>
                                <label for="lbPurchasedPrice" class="col-sm-2 mt-1 text-right">@Resource.Common_label_PurchasedPrice:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.PurchasedPrice, new { @class = "form-control", Type = "number" })
                                </div>

                            </div>
                            <div class="row mb-4">
                                <div class="col-lg-1 mt-1">
                                </div>
                                <label for="lbCurrency" class="col-sm-1 mt-1 text-right">@Resource.Common_label_Currency:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.Currency, new { @class = "form-control" })
                                </div>
                                <label for="lbdisplayOrder" class="col-sm-2 mt-1  text-md-right">@Resource.Common_label_displayOrder:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.DisplayOrder, new { @class = "form-control", Type = "number" })
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-12  mt-1 ">
                                    <div class="form-group row">
                                        <label class="col-lg-1  mt-1  text-left"> @Resource.Common_label_ImageUrl:</label>
                                        <div class="col-lg-9">
                                            <div class="form-group">
                                                <div class="profile">
                                                    <div class="avatar" id="avatar">
                                                        <div id="preview">
                                                            @if (Model.uniqueFileName != null)
                                                            {
                                                                <img src="~/images/@Model.uniqueFileName" id="avatar-image" class="avatar_img">
                                                            }
                                                            <img src="~/assets/images/icon/upload-file.jpg" id="avatar-image" class="avatar_img">
                                                        </div>                                                                                                  
                                                        <div>
                                                            <label class="avatar_upload">
                                                                <input asp-for="ImageProfile" type="file" id="upload" accept=".png, .jpg, .jpeg">
                                                                <div class="nickname text-xl-center mt-5">
                                                                    <span id="name"></span>
                                                                </div>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-4">
                                <div class="col-md-12 mt-1">
                                    <label for="" >@Resource.Common_label_description:</label>
                                </div>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(m => m.Description, new { placeholder = "", @class = "form-control", @rows = "7" })
                                </div>
                            </div>
                            <div class="row ml-2">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-lg-4">
                                            @Html.CheckBoxFor(m => m.AllowEarnPoint, new { @class = "form-group", @checked = "checked" })
                                            <label class="ml-2">@Resource.Common_label_AllowEarnPoint</label>
                                        </div>
                                        <div class="col-lg-4">
                                            @Html.CheckBoxFor(m => m.AllowRedeem, new { @class = "form-group", @checked = "checked" })
                                            <label class="ml-2">@Resource.Common_label_AllowRedeem</label>
                                        </div>
                                        <div class="col-lg-4">
                                            @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-group", @checked = "checked" })
                                            <label class="ml-2">@Resource.Common_label_active</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-2 ml-1">
                                <a href="@Url.Action("Index", "Product")" class="text-white btn btn-primary waves-effect waves-light col-md-3 mt-3 mr-2">@Resource.Common_label_cancel</a>
                                <button type="submit" class="btn btn-primary waves-effect waves-light col-md-3 mt-3">@Resource.Common_label_save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>}
    </div> <!-- container-fluid -->
</div>
<!-- End Page-content -->


@section scripts{
   
    <script>
        var upload = document.getElementById("upload");
        var preview = document.getElementById("preview");
        var avatar = document.getElementById("avatar");
        var avatar_name = document.getElementById("name");
        var avatar_name_change_box =
            document.getElementById("change-name-box");

        var avatars = {
            srcList: [],
            activeKey: 1,
            add: function (_name, _src) {
                this.activeKey = this.srcList.length;
                return (this.srcList.push({ name: _name, src: encodeURIComponent(_src) }) - 1);
            },
            changeName: function (key, _name) {

                if (!Number.isInteger(key)) {
                    return false;
                }
                this.srcList[key].name = _name;
                if (avatar_name.dataset.key == key) {
                    avatar_name.textContent = _name;
                }
                return _name;
            },

        };
        /** Handle uploading of files */
        upload.addEventListener("change", handleFiles, false);
        function handleFiles() {
            var files = this.files;
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var imageType = /^image\//;

                if (!imageType.test(file.type)) {
                    avatar.classList.add("avatar--upload-error");
                    setTimeout(function () {
                        avatar.classList.remove("avatar--upload-error");
                    }, 1200);
                    continue;
                }

                avatar.classList.remove("avatar--upload-error");

                while (preview.firstChild) {
                    preview.removeChild(preview.firstChild);
                }

                var img = document.createElement("img");
                img.file = file;
                img.src = window.URL.createObjectURL(file);
                img.onload = function () {
                    // window.URL.revokeObjectURL(this.src);
                }
                img.className = "avatar_img";

                /* Clear focus and any text editing mode */
                document.activeElement.blur();
                window.getSelection().removeAllRanges();

                var _avatarKey = avatars.add(file.name, img.src);
                avatar_name.textContent = file.name;
                avatar_name.setAttribute("data-key", _avatarKey);
                preview.appendChild(img);
            }
        }
       
    

    </script>

}


